@using SigmaEmu.Shared
@using Register = SigmaEmu.Core.Models.Register
<div class="w-100 h-100 bg-grey-main text-white p-2">
    @if (Listing is null)
    {
        <p>No Listing provided</p>
    }
    else if (ProgramCounter is null)
    {
        <p>No Program Counter given</p>
    }
    else if (Listing.Errors.Count != 0)
    {
        @foreach (var error in Listing.Errors)
        {
            <pre class="text-danger">@error.Format()</pre>
        }
    }
    else
    {
        <div class="d-flex flex-column font-monospace">
            <div class="d-flex flex-row gap-4 fw-bold">
                <span class="col-1">Address</span>
                <span class="col-1">Code</span>
                <span class="col-12">Source</span>
            </div>
            @foreach (var line in Listing.Lines)
            {
                @if (ProgramCounter.GetValueWithoutReading() == line.Address)
                {
                    <hr class="text-text-write my-0 border border-1 border-text-write"/>
                }
                <div class="d-flex flex-row gap-4">
                    <span class="col-1">@line.Address.AsHexString()</span>
                    <span class="col-1">
                        @line.Code1.AsHexString()
                        @(line.Code2 is null ? "" : line.Code2.AsHexString())
                    </span>
                    <span class="col-12">@line.Source</span>
                </div>
                @* <span class="font-monospace">@line.Format().Replace('\n', ' ')</span> *@
            }
        </div>
    }
</div>

@code {

    [Parameter]
    [EditorRequired]
    public Listing? Listing { get; set; }

    [Parameter]
    [EditorRequired]
    public Register? ProgramCounter { get; set; }

}