//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\Parser\Sigma16.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public partial class Sigma16Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		REG=1, DATA=2, ADD=3, SUB=4, MUL=5, DIV=6, CMPLT=7, CMPEQ=8, CMPGT=9, 
		INV=10, AND=11, OR=12, XOR=13, SHIFTL=14, SHIFTR=15, TRAP=16, LEA=17, 
		LOAD=18, STORE=19, JUMPF=20, JUMPT=21, JAL=22, JUMP=23, COMMA=24, LBRACK=25, 
		RBRACK=26, NUM=27, ID=28, SPACE=29, EOL=30, COMMENT=31, ANY=32;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"REG", "DATA", "ADD", "SUB", "MUL", "DIV", "CMPLT", "CMPEQ", "CMPGT", 
		"INV", "AND", "OR", "XOR", "SHIFTL", "SHIFTR", "TRAP", "LEA", "LOAD", 
		"STORE", "JUMPF", "JUMPT", "JAL", "JUMP", "COMMA", "LBRACK", "RBRACK", 
		"NUM", "ID", "SPACE", "EOL", "COMMENT", "ANY", "LETTER", "DIGIT", "A", 
		"B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
		"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};


	public Sigma16Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public Sigma16Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"','", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "REG", "DATA", "ADD", "SUB", "MUL", "DIV", "CMPLT", "CMPEQ", "CMPGT", 
		"INV", "AND", "OR", "XOR", "SHIFTL", "SHIFTR", "TRAP", "LEA", "LOAD", 
		"STORE", "JUMPF", "JUMPT", "JAL", "JUMP", "COMMA", "LBRACK", "RBRACK", 
		"NUM", "ID", "SPACE", "EOL", "COMMENT", "ANY"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Sigma16.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static Sigma16Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,32,391,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
		1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
		0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
		1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,176,8,0,1,1,1,1,1,1,1,1,1,
		1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,
		1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,
		9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
		13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
		15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,
		18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
		20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,
		23,1,24,1,24,1,25,1,25,1,26,4,26,294,8,26,11,26,12,26,295,1,27,1,27,1,
		27,1,27,5,27,302,8,27,10,27,12,27,305,9,27,1,28,4,28,308,8,28,11,28,12,
		28,309,1,28,1,28,1,29,3,29,315,8,29,1,29,1,29,1,29,1,29,1,30,1,30,5,30,
		323,8,30,10,30,12,30,326,9,30,1,30,1,30,3,30,330,8,30,1,30,1,30,1,31,1,
		31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,
		38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,
		45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,
		52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,
		59,0,0,60,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
		13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
		25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,0,67,0,69,0,71,0,73,0,
		75,0,77,0,79,0,81,0,83,0,85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,
		103,0,105,0,107,0,109,0,111,0,113,0,115,0,117,0,119,0,1,0,30,1,0,95,95,
		2,0,9,9,32,32,2,0,10,10,13,13,2,0,65,90,97,122,2,0,65,65,97,97,2,0,66,
		66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,
		102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,
		106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,
		110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,
		114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,
		118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,
		122,122,385,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
		0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
		1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
		0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,1,175,
		1,0,0,0,3,177,1,0,0,0,5,182,1,0,0,0,7,186,1,0,0,0,9,190,1,0,0,0,11,194,
		1,0,0,0,13,198,1,0,0,0,15,204,1,0,0,0,17,210,1,0,0,0,19,216,1,0,0,0,21,
		220,1,0,0,0,23,224,1,0,0,0,25,227,1,0,0,0,27,231,1,0,0,0,29,238,1,0,0,
		0,31,245,1,0,0,0,33,250,1,0,0,0,35,254,1,0,0,0,37,259,1,0,0,0,39,265,1,
		0,0,0,41,271,1,0,0,0,43,277,1,0,0,0,45,281,1,0,0,0,47,286,1,0,0,0,49,288,
		1,0,0,0,51,290,1,0,0,0,53,293,1,0,0,0,55,297,1,0,0,0,57,307,1,0,0,0,59,
		314,1,0,0,0,61,320,1,0,0,0,63,333,1,0,0,0,65,335,1,0,0,0,67,337,1,0,0,
		0,69,339,1,0,0,0,71,341,1,0,0,0,73,343,1,0,0,0,75,345,1,0,0,0,77,347,1,
		0,0,0,79,349,1,0,0,0,81,351,1,0,0,0,83,353,1,0,0,0,85,355,1,0,0,0,87,357,
		1,0,0,0,89,359,1,0,0,0,91,361,1,0,0,0,93,363,1,0,0,0,95,365,1,0,0,0,97,
		367,1,0,0,0,99,369,1,0,0,0,101,371,1,0,0,0,103,373,1,0,0,0,105,375,1,0,
		0,0,107,377,1,0,0,0,109,379,1,0,0,0,111,381,1,0,0,0,113,383,1,0,0,0,115,
		385,1,0,0,0,117,387,1,0,0,0,119,389,1,0,0,0,121,122,3,103,51,0,122,123,
		5,48,0,0,123,176,1,0,0,0,124,125,3,103,51,0,125,126,5,49,0,0,126,176,1,
		0,0,0,127,128,3,103,51,0,128,129,5,50,0,0,129,176,1,0,0,0,130,131,3,103,
		51,0,131,132,5,51,0,0,132,176,1,0,0,0,133,134,3,103,51,0,134,135,5,52,
		0,0,135,176,1,0,0,0,136,137,3,103,51,0,137,138,5,53,0,0,138,176,1,0,0,
		0,139,140,3,103,51,0,140,141,5,54,0,0,141,176,1,0,0,0,142,143,3,103,51,
		0,143,144,5,55,0,0,144,176,1,0,0,0,145,146,3,103,51,0,146,147,5,56,0,0,
		147,176,1,0,0,0,148,149,3,103,51,0,149,150,5,57,0,0,150,176,1,0,0,0,151,
		152,3,103,51,0,152,153,5,49,0,0,153,154,5,48,0,0,154,176,1,0,0,0,155,156,
		3,103,51,0,156,157,5,49,0,0,157,158,5,49,0,0,158,176,1,0,0,0,159,160,3,
		103,51,0,160,161,5,49,0,0,161,162,5,50,0,0,162,176,1,0,0,0,163,164,3,103,
		51,0,164,165,5,49,0,0,165,166,5,51,0,0,166,176,1,0,0,0,167,168,3,103,51,
		0,168,169,5,49,0,0,169,170,5,52,0,0,170,176,1,0,0,0,171,172,3,103,51,0,
		172,173,5,49,0,0,173,174,5,53,0,0,174,176,1,0,0,0,175,121,1,0,0,0,175,
		124,1,0,0,0,175,127,1,0,0,0,175,130,1,0,0,0,175,133,1,0,0,0,175,136,1,
		0,0,0,175,139,1,0,0,0,175,142,1,0,0,0,175,145,1,0,0,0,175,148,1,0,0,0,
		175,151,1,0,0,0,175,155,1,0,0,0,175,159,1,0,0,0,175,163,1,0,0,0,175,167,
		1,0,0,0,175,171,1,0,0,0,176,2,1,0,0,0,177,178,3,75,37,0,178,179,3,69,34,
		0,179,180,3,107,53,0,180,181,3,69,34,0,181,4,1,0,0,0,182,183,3,69,34,0,
		183,184,3,75,37,0,184,185,3,75,37,0,185,6,1,0,0,0,186,187,3,105,52,0,187,
		188,3,109,54,0,188,189,3,71,35,0,189,8,1,0,0,0,190,191,3,93,46,0,191,192,
		3,109,54,0,192,193,3,91,45,0,193,10,1,0,0,0,194,195,3,75,37,0,195,196,
		3,85,42,0,196,197,3,111,55,0,197,12,1,0,0,0,198,199,3,73,36,0,199,200,
		3,93,46,0,200,201,3,99,49,0,201,202,3,91,45,0,202,203,3,107,53,0,203,14,
		1,0,0,0,204,205,3,73,36,0,205,206,3,93,46,0,206,207,3,99,49,0,207,208,
		3,77,38,0,208,209,3,101,50,0,209,16,1,0,0,0,210,211,3,73,36,0,211,212,
		3,93,46,0,212,213,3,99,49,0,213,214,3,81,40,0,214,215,3,107,53,0,215,18,
		1,0,0,0,216,217,3,85,42,0,217,218,3,95,47,0,218,219,3,111,55,0,219,20,
		1,0,0,0,220,221,3,69,34,0,221,222,3,95,47,0,222,223,3,75,37,0,223,22,1,
		0,0,0,224,225,3,97,48,0,225,226,3,103,51,0,226,24,1,0,0,0,227,228,3,115,
		57,0,228,229,3,97,48,0,229,230,3,103,51,0,230,26,1,0,0,0,231,232,3,105,
		52,0,232,233,3,83,41,0,233,234,3,85,42,0,234,235,3,79,39,0,235,236,3,107,
		53,0,236,237,3,91,45,0,237,28,1,0,0,0,238,239,3,105,52,0,239,240,3,83,
		41,0,240,241,3,85,42,0,241,242,3,79,39,0,242,243,3,107,53,0,243,244,3,
		103,51,0,244,30,1,0,0,0,245,246,3,107,53,0,246,247,3,103,51,0,247,248,
		3,69,34,0,248,249,3,99,49,0,249,32,1,0,0,0,250,251,3,91,45,0,251,252,3,
		77,38,0,252,253,3,69,34,0,253,34,1,0,0,0,254,255,3,91,45,0,255,256,3,97,
		48,0,256,257,3,69,34,0,257,258,3,75,37,0,258,36,1,0,0,0,259,260,3,105,
		52,0,260,261,3,107,53,0,261,262,3,97,48,0,262,263,3,103,51,0,263,264,3,
		77,38,0,264,38,1,0,0,0,265,266,3,87,43,0,266,267,3,109,54,0,267,268,3,
		93,46,0,268,269,3,99,49,0,269,270,3,79,39,0,270,40,1,0,0,0,271,272,3,87,
		43,0,272,273,3,109,54,0,273,274,3,93,46,0,274,275,3,99,49,0,275,276,3,
		107,53,0,276,42,1,0,0,0,277,278,3,87,43,0,278,279,3,69,34,0,279,280,3,
		91,45,0,280,44,1,0,0,0,281,282,3,87,43,0,282,283,3,109,54,0,283,284,3,
		93,46,0,284,285,3,99,49,0,285,46,1,0,0,0,286,287,5,44,0,0,287,48,1,0,0,
		0,288,289,5,91,0,0,289,50,1,0,0,0,290,291,5,93,0,0,291,52,1,0,0,0,292,
		294,3,67,33,0,293,292,1,0,0,0,294,295,1,0,0,0,295,293,1,0,0,0,295,296,
		1,0,0,0,296,54,1,0,0,0,297,303,3,65,32,0,298,302,3,65,32,0,299,302,7,0,
		0,0,300,302,3,67,33,0,301,298,1,0,0,0,301,299,1,0,0,0,301,300,1,0,0,0,
		302,305,1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,0,304,56,1,0,0,0,305,303,
		1,0,0,0,306,308,7,1,0,0,307,306,1,0,0,0,308,309,1,0,0,0,309,307,1,0,0,
		0,309,310,1,0,0,0,310,311,1,0,0,0,311,312,6,28,0,0,312,58,1,0,0,0,313,
		315,5,13,0,0,314,313,1,0,0,0,314,315,1,0,0,0,315,316,1,0,0,0,316,317,5,
		10,0,0,317,318,1,0,0,0,318,319,6,29,0,0,319,60,1,0,0,0,320,324,5,59,0,
		0,321,323,8,2,0,0,322,321,1,0,0,0,323,326,1,0,0,0,324,322,1,0,0,0,324,
		325,1,0,0,0,325,329,1,0,0,0,326,324,1,0,0,0,327,330,3,59,29,0,328,330,
		5,0,0,1,329,327,1,0,0,0,329,328,1,0,0,0,330,331,1,0,0,0,331,332,6,30,0,
		0,332,62,1,0,0,0,333,334,9,0,0,0,334,64,1,0,0,0,335,336,7,3,0,0,336,66,
		1,0,0,0,337,338,2,48,57,0,338,68,1,0,0,0,339,340,7,4,0,0,340,70,1,0,0,
		0,341,342,7,5,0,0,342,72,1,0,0,0,343,344,7,6,0,0,344,74,1,0,0,0,345,346,
		7,7,0,0,346,76,1,0,0,0,347,348,7,8,0,0,348,78,1,0,0,0,349,350,7,9,0,0,
		350,80,1,0,0,0,351,352,7,10,0,0,352,82,1,0,0,0,353,354,7,11,0,0,354,84,
		1,0,0,0,355,356,7,12,0,0,356,86,1,0,0,0,357,358,7,13,0,0,358,88,1,0,0,
		0,359,360,7,14,0,0,360,90,1,0,0,0,361,362,7,15,0,0,362,92,1,0,0,0,363,
		364,7,16,0,0,364,94,1,0,0,0,365,366,7,17,0,0,366,96,1,0,0,0,367,368,7,
		18,0,0,368,98,1,0,0,0,369,370,7,19,0,0,370,100,1,0,0,0,371,372,7,20,0,
		0,372,102,1,0,0,0,373,374,7,21,0,0,374,104,1,0,0,0,375,376,7,22,0,0,376,
		106,1,0,0,0,377,378,7,23,0,0,378,108,1,0,0,0,379,380,7,24,0,0,380,110,
		1,0,0,0,381,382,7,25,0,0,382,112,1,0,0,0,383,384,7,26,0,0,384,114,1,0,
		0,0,385,386,7,27,0,0,386,116,1,0,0,0,387,388,7,28,0,0,388,118,1,0,0,0,
		389,390,7,29,0,0,390,120,1,0,0,0,9,0,175,295,301,303,309,314,324,329,1,
		6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
